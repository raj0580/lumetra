// This script handles functionality for the public-facing pages.
document.addEventListener("DOMContentLoaded", () => {
    
    // --- STORY GRID & PORTFOLIO GRID LOADING ---
    const storyGrid = document.getElementById('story-grid');
    const portfolioGrid = document.getElementById('portfolio-projects-grid');

    const displayProjects = (gridElement, category = null) => {
        if (!gridElement) return;

        getProjects(category).then(projects => {
            if (projects.length === 0) {
                gridElement.innerHTML = `<p style="color: var(--text-secondary); text-align: center;">No projects found. Check back soon!</p>`;
                return;
            }
            gridElement.innerHTML = ''; // Clear loading
            projects.forEach(project => {
                const projectCard = document.createElement('div');
                projectCard.className = 'project-card-story'; // Use the new class
                projectCard.innerHTML = `
                    <img src="${project.imageUrl}" alt="${project.title}">
                    <div class="content">
                        <span class="category">${project.category}</span>
                        <h3>${project.title}</h3>
                        <p>${project.description}</p>
                    </div>
                `;
                gridElement.appendChild(projectCard);
            });
        }).catch(err => {
            console.error("Error fetching projects:", err);
            gridElement.innerHTML = `<p style="color: var(--text-secondary); text-align: center;">Could not load projects at this time.</p>`;
        });
    };

    // Load projects on homepage's story grid
    displayProjects(storyGrid);

    // Load projects on the portfolio page (if on that page)
    if (portfolioGrid) {
        const urlParams = new URLSearchParams(window.location.search);
        const category = urlParams.get('category');
        displayProjects(portfolioGrid, category);
    }
    
    // --- FADE-IN ANIMATION ---
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) entry.target.classList.add('visible');
        });
    }, { threshold: 0.1 });
    document.querySelectorAll('.fade-in-section').forEach(section => observer.observe(section));
});
